---
description: 
globs: 
alwaysApply: true
---
# Regla: sitemap-robots.mdc

## üéØ Prop√≥sito
Establecer un sistema automatizado para la generaci√≥n de sitemap.xml y configuraci√≥n de robots.txt, garantizando la correcta indexaci√≥n por buscadores, control de acceso a contenidos y mejora del SEO t√©cnico.

---

## üìÑ Estructura de Sitemap XML

### 1. Configuraci√≥n base (next-sitemap.config.js)
```javascript
/** @type {import('next-sitemap').IConfig} */
module.exports = {
  siteUrl: process.env.NEXT_PUBLIC_SITE_URL || 'https://tusitio.com',
  generateRobotsTxt: true,
  sitemapSize: 7000,
  changefreq: 'daily',
  priority: 0.7,
  exclude: [
    '/admin*',
    '/dashboard*',
    '/api*',
    '/404',
    '/500',
    '/login',
    '/register',
    '/user*',
  ],
  robotsTxtOptions: {
    policies: [
      {
        userAgent: '*',
        allow: '/',
        disallow: [
          '/admin',
          '/dashboard',
          '/api',
          '/user',
          '/*.json$',
          '/*_next/*',
        ],
      },
      // Pol√≠ticas para bots espec√≠ficos
      {
        userAgent: 'Googlebot',
        allow: '/',
        disallow: ['/admin', '/api'],
      },
    ],
    additionalSitemaps: [
      // Sitemaps adicionales (ej. productos, blog, etc)
      'https://tusitio.com/server-sitemap.xml',
    ],
  },
};
```

### 2. Generaci√≥n automatizada
```json
// package.json (scripts)
{
  "scripts": {
    "postbuild": "next-sitemap"
  }
}
```

### 3. Dependencias requeridas
```bash
npm install next-sitemap --save-dev
```

---

## ü§ñ Generaci√≥n din√°mica de sitemaps

### 1. Sitemap est√°tico + din√°mico (para rutas generadas en tiempo de ejecuci√≥n)
```typescript
// pages/server-sitemap.xml/index.tsx
import { getServerSideSitemap, ISitemapField } from 'next-sitemap';
import { GetServerSideProps } from 'next';

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  // M√©todo para obtener URLs din√°micas (ej: productos desde una API)
  const dynamicProducts = await fetchProductsFromAPI();
  
  const fields: ISitemapField[] = dynamicProducts.map((product) => ({
    loc: `https://tusitio.com/productos/${product.slug}`,
    lastmod: product.updatedAt,
    changefreq: 'daily',
    priority: 0.8,
  }));

  return getServerSideSitemap(ctx, fields);
};

// Por defecto, no renderiza nada (el contenido es XML)
export default function Sitemap() {}
```

### 2. Rutas con demasiados elementos
Para sitios con muchas URLs, se recomienda generar m√∫ltiples sitemaps:

```typescript
// pages/sitemaps/blog-[page].xml.tsx
import { getServerSideSitemap } from 'next-sitemap';
import { GetServerSideProps } from 'next';

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { page } = ctx.params as { page: string };
  const pageNumber = parseInt(page, 10);
  const postsPerPage = 1000; // Max recomendado por sitemap
  
  // Obtener blog posts paginados
  const posts = await getBlogPosts({
    skip: (pageNumber - 1) * postsPerPage,
    take: postsPerPage,
  });
  
  const fields = posts.map((post) => ({
    loc: `https://tusitio.com/blog/${post.slug}`,
    lastmod: post.updatedAt,
    changefreq: 'weekly',
    priority: 0.7,
  }));

  return getServerSideSitemap(ctx, fields);
};

export default function PostsSitemap() {}
```

---

## üîç Configuraci√≥n de robots.txt

### 1. Estructura base

```
# Archivo robots.txt base
User-agent: *
Allow: /

# Secciones privadas
Disallow: /admin/
Disallow: /dashboard/
Disallow: /user/
Disallow: /api/
Disallow: /login
Disallow: /register

# Archivos y directorios del sistema
Disallow: /*.json$
Disallow: /*_next/*

# Sitemap
Sitemap: https://tusitio.com/sitemap.xml
```

### 2. Manejo de entornos

```typescript
// robots.txt para entornos de desarrollo/staging
const disallowAll = `
User-agent: *
Disallow: /
`;

// robots.txt para producci√≥n
const allowAll = `
User-agent: *
Allow: /
Disallow: /admin/
Disallow: /api/
Disallow: /login
# Otras reglas...

Sitemap: https://tusitio.com/sitemap.xml
`;

module.exports = {
  robotsTxtOptions: {
    // Contenido personalizado seg√∫n ambiente
    additionalSitemaps: [
      'https://tusitio.com/sitemap.xml',
    ],
    transformRobotsTxt: async (config, robotsTxt) => {
      // Definir el contenido seg√∫n el entorno
      if (process.env.NODE_ENV !== 'production' || 
          process.env.NEXT_PUBLIC_APP_ENV === 'staging') {
        return disallowAll;
      }
      return allowAll;
    },
  },
};
```

---

## üîó URLs can√≥nicas para contenido duplicado

### 1. Implementaci√≥n en componente SEO

```tsx
// components/SEO.tsx
import Head from 'next/head';
import { useRouter } from 'next/router';

interface SEOProps {
  title: string;
  description: string;
  canonical?: string;
  // Otros props...
}

export function SEO({ title, description, canonical, ...rest }: SEOProps) {
  const router = useRouter();
  
  // Construir URL can√≥nica
  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://tusitio.com';
  const canonicalUrl = canonical || `${siteUrl}${router.asPath}`;
  
  return (
    <Head>
      <title>{title}</title>
      <meta name="description" content={description} />
      <link rel="canonical" href={canonicalUrl} />
      {/* Otros meta tags... */}
    </Head>
  );
}
```

### 2. Manejo de par√°metros de b√∫squeda y URL duplicadas

```tsx
// pages/productos/index.tsx
import { SEO } from '@/components/SEO';
import { useRouter } from 'next/router';

export default function ProductsPage() {
  const router = useRouter();
  const { query, category } = router.query;
  
  // Determinar la URL can√≥nica (para evitar duplicados por filtros)
  let canonicalUrl = 'https://tusitio.com/productos';
  
  // Si es una categor√≠a principal, usar su URL como can√≥nica
  if (category && !query) {
    canonicalUrl = `https://tusitio.com/productos?category=${category}`;
  }
  
  return (
    <>
      <SEO 
        title="Productos | Tu Empresa"
        description="Explora nuestra gama de productos"
        canonical={canonicalUrl}
      />
      {/* Contenido de la p√°gina */}
    </>
  );
}
```

---

## üö¶ Headers HTTP para control de indexaci√≥n

### 1. Configuraci√≥n en next.config.js

```javascript
// next.config.js
module.exports = {
  async headers() {
    return [
      {
        // P√°ginas no indexables
        source: '/preview/:path*',
        headers: [
          {
            key: 'X-Robots-Tag',
            value: 'noindex, nofollow',
          },
        ],
      },
      {
        // P√°ginas en desarrollo/staging
        source: '/:path*',
        headers: [
          {
            key: 'X-Robots-Tag',
            value: process.env.NEXT_PUBLIC_APP_ENV === 'production'
              ? 'index, follow'
              : 'noindex, nofollow',
          },
        ],
      },
    ];
  },
};
```

### 2. Control por p√°gina con metadatos

```tsx
// app/admin/page.tsx
export const metadata = {
  robots: {
    index: false,
    follow: false,
  },
};
```

---

## üõ†Ô∏è Reglas para Cursor (Frontend)

- Implementar `next-sitemap` en todos los proyectos
- Configurar el script `postbuild` para generar el sitemap autom√°ticamente
- Implementar sitemaps separados para secciones con muchas p√°ginas
- Configurar robots.txt para bloquear √°reas privadas/administrativas
- Bloquear indexaci√≥n completa en entornos de desarrollo/staging/test
- Mantener URLs can√≥nicas en todas las p√°ginas, especialmente las con par√°metros
- Regenerar sitemaps al menos semanalmente en sitios con contenido din√°mico
- Incluir campo lastmod en todas las entradas del sitemap
- Seguir la estructura jer√°rquica de URLs para facilitar el rastreo
- Verificar el sitemap.xml y robots.txt tras cada despliegue 

---

## üå©Ô∏è Optimizaci√≥n para Vercel y Cloudflare

### Sitemap espec√≠fico para Vercel

```javascript
// next-sitemap.config.js con optimizaci√≥n para Vercel
module.exports = {
  siteUrl: process.env.VERCEL_URL 
    ? `https://${process.env.VERCEL_URL}`
    : process.env.NEXT_PUBLIC_SITE_URL || 'https://tusitio.com',
  generateRobotsTxt: true,
  sitemapSize: 7000,
  // Detectar ambiente para estrategia de indexaci√≥n
  robotsTxtOptions: {
    policies: [
      // Permitir indexaci√≥n solo en producci√≥n
      process.env.VERCEL_ENV === 'production'
        ? { userAgent: '*', allow: '/' }
        : { userAgent: '*', disallow: '/' },
      // Reglas espec√≠ficas para producci√≥n
      ...(process.env.VERCEL_ENV === 'production' 
        ? [
            {
              userAgent: '*',
              disallow: ['/api/', '/admin/', '/_next/'],
            }
          ]
        : []),
    ],
  },
  // Hook para transformar sitemap seg√∫n entorno
  transform: async (config, path) => {
    // No incluir ciertas rutas en entornos de desarrollo/preview
    if (process.env.VERCEL_ENV !== 'production' && 
        (path.includes('/admin') || path.includes('/api'))) {
      return null; // Excluir de sitemap
    }
    
    return {
      loc: path,
      changefreq: config.changefreq,
      priority: config.priority,
      lastmod: new Date().toISOString(),
    };
  },
};
```

### Middleware para control de indexaci√≥n

```typescript
// middleware.ts
import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

export function middleware(request: NextRequest) {
  const response = NextResponse.next();
  
  // A√±adir headers de control de indexaci√≥n espec√≠ficos por entorno
  const isProduction = 
    process.env.VERCEL_ENV === 'production' || 
    process.env.NODE_ENV === 'production';
  
  if (!isProduction) {
    // Prevenir indexaci√≥n en entornos no-prod
    response.headers.set('X-Robots-Tag', 'noindex, nofollow');
  } else {
    // Habilitar indexaci√≥n en prod con opciones de Cloudflare
    response.headers.set('X-Robots-Tag', 'index, follow');
  }
  
  return response;
}

export const config = {
  matcher: [
    // Aplicar a todas las rutas excepto est√°ticos
    '/((?!_next/static|favicon.ico|robots.txt|sitemap.xml).*)',
  ],
};
```

### Sitemap din√°mico para Workers de Cloudflare

```javascript
// worker-sitemap.js (para Cloudflare Workers)
export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    
    // Servir un sitemap.xml desde Worker
    if (url.pathname === '/worker-sitemap.xml') {
      const sitemapContent = await generateSitemapFromKV(env);
      
      return new Response(sitemapContent, {
        headers: {
          'Content-Type': 'application/xml',
          'Cache-Control': 'public, max-age=86400',
        },
      });
    }
    
    // Otras rutas contin√∫an normalmente
    return fetch(request);
  }
};

// Generar sitemap desde Cloudflare KV
async function generateSitemapFromKV(env) {
  // Ejemplo: obtener URLs din√°micas desde KV
  const urls = await env.MY_KV_NAMESPACE.get('dynamic_urls', { type: 'json' }) || [];
  
  // Crear XML
  let sitemap = '<?xml version="1.0" encoding="UTF-8"?>';
  sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">';
  
  // A√±adir URLs
  for (const url of urls) {
    sitemap += `
      <url>
        <loc>${url.loc}</loc>
        <lastmod>${url.lastmod || new Date().toISOString()}</lastmod>
        <changefreq>${url.changefreq || 'weekly'}</changefreq>
        <priority>${url.priority || '0.7'}</priority>
      </url>
    `;
  }
  
  sitemap += '</urlset>';
  return sitemap;
}
```

### Optimizaci√≥n de meta tags para Cloudflare

```tsx
// app/layout.tsx
export async function generateMetadata({ params }) {
  // URL base adaptativa seg√∫n entorno
  const baseUrl = process.env.VERCEL_URL 
    ? `https://${process.env.VERCEL_URL}` 
    : process.env.NEXT_PUBLIC_SITE_URL;
  
  // Metadata b√°sica
  const metadata = {
    metadataBase: new URL(baseUrl),
    title: 'Tu Sitio Web',
    description: 'Descripci√≥n de tu sitio',
    
    // Enlaces al sitemap optimizado para Cloudflare
    alternates: {
      canonical: '/',
      types: {
        'application/rss+xml': `${baseUrl}/feed.xml`,
      },
    },
    
    // Cache buster para evitar problemas de cach√© en OG images
    openGraph: {
      images: [
        {
          url: `${baseUrl}/api/og?v=${Date.now()}`,
          width: 1200,
          height: 630,
        },
      ],
    },
    
    // Control de robots espec√≠fico seg√∫n entorno
    robots: {
      index: process.env.VERCEL_ENV === 'production',
      follow: process.env.VERCEL_ENV === 'production',
      googleBot: {
        index: process.env.VERCEL_ENV === 'production',
        follow: process.env.VERCEL_ENV === 'production',
      },
    },
  };
  
  return metadata;
}
```

### Im√°genes OG optimizadas para Cloudflare

```typescript
// app/api/og/route.ts
import { ImageResponse } from 'next/server';
import { NextRequest } from 'next/server';

export const runtime = 'edge';

export async function GET(req: NextRequest) {
  const { searchParams } = new URL(req.url);
  const title = searchParams.get('title') || 'Tu Sitio Web';
  
  // Generar imagen OG din√°mica
  return new ImageResponse(
    (
      <div
        style={{
          display: 'flex',
          fontSize: 60,
          color: 'white',
          background: 'linear-gradient(to bottom, #334155, #0f172a)',
          width: '100%',
          height: '100%',
          textAlign: 'center',
          justifyContent: 'center',
          alignItems: 'center',
        }}
      >
        {title}
      </div>
    ),
    {
      width: 1200,
      height: 630,
      // Headers optimizados para Cloudflare
      headers: {
        'Cache-Control': 'public, max-age=86400, s-maxage=31536000',
        'CDN-Cache-Control': 'max-age=86400',
      }
    }
  );
}
```

---

## üõ†Ô∏è Reglas adicionales para Vercel y Cloudflare

- Utilizar Vercel Edge para generar sitemaps din√°micos
- Implementar headers espec√≠ficos de Cloudflare para control de cach√©
- Configurar entornos de Preview con noindex para evitar indexaci√≥n duplicada
- Implementar detecci√≥n autom√°tica de entorno para pol√≠ticas de robots.txt
- Utilizar Enterprise Workers de Cloudflare para sitemap.xml de alto rendimiento
- Configurar Page Rules en Cloudflare para optimizar robots.txt y sitemap.xml
- Implementar monitoreo de indexaci√≥n mediante la API de Google Search Console
- Utilizar Workers para detectar y redireccionar User-Agents espec√≠ficos
- Implementar estrategia de im√°genes OG din√°micas optimizadas para Cloudflare
- Configurar WAF rules en Cloudflare para proteger contra scraping malicioso 