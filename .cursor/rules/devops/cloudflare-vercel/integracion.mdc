---
description: 
globs: 
alwaysApply: true
---
# Regla: cloudflare-vercel-integracion.mdc

## üéØ Prop√≥sito
Establecer la configuraci√≥n √≥ptima para integrar Cloudflare como CDN y servicios de seguridad con Vercel como plataforma de hosting, aprovechando las mejores caracter√≠sticas de ambas plataformas y optimizando el rendimiento, la seguridad y la escalabilidad del sitio web.

---

## üåê Arquitectura de integraci√≥n

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                 ‚îÇ     ‚îÇ                 ‚îÇ     ‚îÇ                 ‚îÇ
‚îÇ   USUARIOS      ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∂‚îÇ   CLOUDFLARE    ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∂‚îÇ     VERCEL      ‚îÇ
‚îÇ                 ‚îÇ     ‚îÇ   (CDN/Proxy)   ‚îÇ     ‚îÇ   (Hosting)     ‚îÇ
‚îÇ                 ‚îÇ     ‚îÇ                 ‚îÇ     ‚îÇ                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                               ‚îÇ                         ‚îÇ
                               ‚îÇ                         ‚îÇ
                               ‚ñº                         ‚ñº
                        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                        ‚îÇ  CLOUDFLARE     ‚îÇ     ‚îÇ  VERCEL         ‚îÇ
                        ‚îÇ  WORKERS        ‚îÇ     ‚îÇ  EDGE FUNCTIONS ‚îÇ
                        ‚îÇ  (L√≥gica Edge)  ‚îÇ     ‚îÇ  (Middleware)   ‚îÇ
                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

---

## üîó Configuraci√≥n de DNS y dominios

### 1. Registro de dominio en Cloudflare

```
1. Registrar el dominio en Cloudflare o transferirlo
2. Verificar que los nameservers est√©n configurados correctamente:
   - beth.ns.cloudflare.com
   - cruz.ns.cloudflare.com
```

### 2. Configuraci√≥n de dominio en Vercel

```
1. Desde el Dashboard de Vercel > [Proyecto] > Settings > Domains
2. A√±adir dominio personalizado: "tusitio.com"
3. Seleccionar "Verificaci√≥n a trav√©s de archivos DNS"
4. No a√±adir registros DNS autom√°ticamente
```

### 3. Configuraci√≥n DNS en Cloudflare

```
1. Ir a Cloudflare Dashboard > [Dominio] > DNS
2. A√±adir los siguientes registros:
   - Tipo: A, Nombre: @, Valor: 76.76.21.21, Proxy: ACTIVADO (naranja)
   - Tipo: CNAME, Nombre: www, Valor: cname.vercel-dns.com, Proxy: ACTIVADO (naranja)
3. Configurar registro CAA si es necesario
```

---

## üîí Configuraci√≥n SSL/TLS

### 1. Configuraci√≥n en Cloudflare

```
1. Ir a Cloudflare Dashboard > [Dominio] > SSL/TLS > Overview
2. Establecer modo SSL: Full (strict)
3. En Edge Certificates:
   - Activar Always Use HTTPS
   - Activar Minimum TLS Version: TLS 1.2
   - Activar Opportunistic Encryption
   - Activar TLS 1.3
```

### 2. Configuraci√≥n en Vercel

```
1. Dashboard de Vercel > [Proyecto] > Settings > SSL
2. Verificar que el certificado est√° activo
3. No es necesario configurar certificados personalizados (Cloudflare lo maneja)
```

---

## üöÄ Optimizaci√≥n de cach√© y rendimiento

### 1. Configuraci√≥n de Page Rules en Cloudflare

```
1. Ir a Cloudflare Dashboard > [Dominio] > Rules > Page Rules
2. Crear reglas para contenido est√°tico:
   - URL: "https://tusitio.com/static/*"
   - Configuraci√≥n: Cache Level: Cache Everything, Edge Cache TTL: 1 month
3. Crear regla para archivos de fuentes:
   - URL: "https://tusitio.com/fonts/*"
   - Configuraci√≥n: Cache Level: Cache Everything, Browser Cache TTL: 1 year
```

### 2. Configuraci√≥n en Vercel para optimizar Cloudflare

```javascript
// next.config.js
module.exports = {
  async headers() {
    return [
      {
        source: '/static/:path*',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=31536000, immutable',
          },
          {
            key: 'CDN-Cache-Control',
            value: 'public, max-age=31536000',
          },
        ],
      },
      {
        source: '/_next/image',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=86400, stale-while-revalidate=31536000',
          },
          {
            key: 'CDN-Cache-Control',
            value: 'public, max-age=86400',
          },
        ],
      },
    ];
  },
};
```

### 3. Activar Automatic Platform Optimization (APO)

```
1. Ir a Cloudflare Dashboard > [Dominio] > Speed > Optimization
2. Activar Automatic Platform Optimization for WordPress (funciona con Next.js tambi√©n)
3. Configuraciones recomendadas:
   - Activar Mirage (optimizaci√≥n de im√°genes)
   - Activar Rocket Loader (optimizar carga de JavaScript)
   - Activar "Auto Minify" para HTML, CSS y JavaScript
```

---

## üõ°Ô∏è Protecci√≥n y seguridad

### 1. Firewall y WAF de Cloudflare

```
1. Ir a Cloudflare Dashboard > [Dominio] > Security > WAF
2. Activar conjunto de reglas administrado para:
   - OWASP Core Rule Set
   - Cloudflare Managed Rules
3. Crear reglas personalizadas para bloquear pa√≠ses espec√≠ficos si es necesario
4. Configurar Rate Limiting para prevenir ataques de fuerza bruta:
   - Rate: 100 requests/minute
   - Aplicar a: /api/*, /login, /admin/*
```

### 2. Configuraci√≥n de seguridad en encabezados HTTP

```javascript
// middleware.ts
import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

export function middleware(request: NextRequest) {
  const response = NextResponse.next();
  
  // Headers de seguridad
  response.headers.set('X-XSS-Protection', '1; mode=block');
  response.headers.set('X-Content-Type-Options', 'nosniff');
  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');
  response.headers.set('X-Frame-Options', 'DENY');
  response.headers.set(
    'Content-Security-Policy',
    "default-src 'self'; script-src 'self' 'unsafe-inline' *.vercel-insights.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: *.cloudflare.com; connect-src 'self' *.vercel-insights.com"
  );
  
  return response;
}
```

### 3. Protecci√≥n contra bots maliciosos

```
1. Ir a Cloudflare Dashboard > [Dominio] > Security > Bots
2. Activar Bot Fight Mode
3. Configurar Super Bot Fight Mode (requiere plan Business o Enterprise)
4. Para formularios cr√≠ticos, activar Cloudflare Turnstile (alternativa a CAPTCHA)
```

---

## üìä Analytics e Insights

### 1. Configuraci√≥n de Cloudflare Analytics

```
1. Ir a Cloudflare Dashboard > [Dominio] > Analytics & Logs
2. Activar Web Analytics
3. (Opcional) Configurar Log Retention si se necesita un an√°lisis m√°s detallado
```

### 2. Integraci√≥n con Vercel Analytics

```typescript
// app/layout.tsx
import { Analytics } from '@vercel/analytics/react';

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="es">
      <body>
        {children}
        <Analytics />
      </body>
    </html>
  );
}
```

### 3. Monitoreo de rendimiento

```
1. Ir a Cloudflare Dashboard > [Dominio] > Speed > Optimization
2. Revisar Core Web Vitals y m√©tricas de rendimiento
3. Configurar alertas para ca√≠das de rendimiento
```

---

## üîÑ Orquestaci√≥n Edge (Workers + Edge Functions)

### 1. Cloudflare Workers para procesamiento regional

```javascript
// workers/geo-redirect.js
export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    const country = request.headers.get('cf-ipcountry') || 'US';
    
    // Redireccionar seg√∫n pa√≠s
    if (country === 'MX' && !url.pathname.startsWith('/mx')) {
      return Response.redirect(`${url.origin}/mx${url.pathname}`, 302);
    }
    
    // Pasar a Vercel si no hay redirecci√≥n
    return fetch(request);
  }
};
```

### 2. Vercel Edge Functions para A/B Testing

```typescript
// app/middleware.ts
import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

export const config = {
  matcher: ['/'],
};

export function middleware(request: NextRequest) {
  // Determinar grupo de prueba
  const bucketA = Math.random() < 0.5;
  
  // Clonar la respuesta
  const response = NextResponse.next();
  
  // A√±adir header para renderizado condicional
  response.cookies.set('ab-test-bucket', bucketA ? 'A' : 'B');
  
  return response;
}
```

### 3. Coordinaci√≥n entre Workers y Edge Functions

```typescript
// Para datos compartidos y consistencia entre Cloudflare y Vercel
// 1. Usar Cloudflare KV para almacenamiento:
export async function getSharedConfig(request: NextRequest) {
  const configUrl = 'https://api.cloudflare.com/client/v4/accounts/{account_id}/storage/kv/namespaces/{namespace_id}/values/config';
  
  const response = await fetch(configUrl, {
    headers: {
      'Authorization': `Bearer ${process.env.CLOUDFLARE_API_TOKEN}`,
    },
  });
  
  return await response.json();
}

// 2. Usar Vercel Edge Config como alternativa:
import { createClient } from '@vercel/edge-config';
const client = createClient(process.env.EDGE_CONFIG);

export async function getConfig(key: string) {
  return await client.get(key);
}
```

---

## üõ†Ô∏è Reglas para Cursor (Frontend)

- Usar Cloudflare como proxy para todo el tr√°fico (DNS proxied)
- Configurar siempre SSL/TLS en modo Full (strict)
- Implementar Page Rules de Cloudflare para cach√© √≥ptimo de assets
- Configurar headers de cach√© adecuados seg√∫n tipo de contenido
- Habilitar Automatic Platform Optimization (APO) en Cloudflare
- Usar Turnstile para formularios cr√≠ticos en lugar de CAPTCHA
- Implementar Edge Functions de Vercel para l√≥gica sensible a latencia
- Usar Workers KV para almacenamiento compartido entre servicios edge
- Configurar WAF con reglas personalizadas seg√∫n necesidades del proyecto
- Implementar monitoreo doble: Vercel Analytics + Cloudflare Analytics
